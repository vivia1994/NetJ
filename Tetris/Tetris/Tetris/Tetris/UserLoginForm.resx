<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAGYktHRAD/AP8A/6C9p5MAAAAJdnBBZwAAAyAAAAL1AEnZ
        YzQAAAAldEVYdGNyZWF0ZS1kYXRlADIwMTQtMDctMTlUMDY6MjQ6MDMrMDg6MDBQPm3IAAAAJXRFWHRt
        b2RpZnktZGF0ZQAyMDE0LTA3LTE5VDA2OjI0OjAzKzA4OjAwD48b/AAAA8xJREFUSEu91m1MW1UYB/Cb
        bB/8MgsZepcZE5wv+7h9IBqTSXSLLAsf1AWYUTNQma6wJZvFZmzBiYMxkjoh8tKVlxHZGFAgZjo2QUWd
        DNYqLJCBGBBaJGS8Drr2th3s73Oec6FW2Ydpwkl+ubfPPff87z333LYKwtoiuasL/g/hjUNqa2eZogRI
        UN/+V0GsWzfDvN6JVQ2ZoQMaqzwLXL8OtLeHu3YN6OgI6eyU/RwOwOkMNzQEREZKW7d+I0M8nl4KoB3S
        0grU1EgXLoTU1kp1dVJ9vWS3Aw0NIY2NQGsLEBsrGQzUWYT4fP3LIU1NQFkZUF4O2GgrFBUBZ2xAZSVw
        lu5UqKqSKqhmPSOJz9XVcoy4OCkiQg/RtFCI6FRYCBQUUJAtwOYmp3HRfguWT4HiYqmkBPiM+jTW34Fn
        aprVfDGHklI5xo4dksFA07BqIT5f33JIqRXIywM+OQF8e2WOAX7iwbnyMZzIAcs9SRdhnQfuEf3dcPw0
        jlP5NLU0ddu2SQYDPVxqYSEWC5CVJR05co+NDY3jrjaPRW0Shflj7FSuFwu0PIOaB1OjbpZ93M8XIGbi
        2eekiJVCsrMBkwnIyAA+oK1w8MAiRgdG4JudwpTbxW4Nj8A7O42J4UGYTT6WmSlnwWwGNm6U1q9fnq7f
        KMDLzOYAjEY/0tJC9huDSH1XQ59jAJMuN5twjWKwqxcHjDM4dHiBmUwBqOodGsdDFpiq0pJbxZDfqeBi
        6emzSE6eRkpKyN7k23jrzXHcaHPAfbN/WX97B9JSB5G4x8MUxa0bJRNMVWkZihCvV4R0s5SUP5GY6EJS
        kgsJiaPs1VeG4LzUikHnL+hu+Z45mtsw3N2NnstNdN4lnZiRHt0AU9XTMsTn+4MKbSz6CSd27+5DfPxN
        7NzZw65U1OEGfd90f9WIN177kSUl9OLn89VoLrLi/LFjTFG+JO3kKulkqpq7FDJChXpdI2JifsCL2zth
        esfOnPZzuFpVhj3xdsTt+pU9Hv0d1ioVqD2aiWbLSfZ6TAad/zURd3eRbdhwdFVDxIM6rSshRdiyxY6X
        YhtYwaF8JLxciudfuIyoqEqmKJ8TGyIfysPhuFT28NocqpWSYmJlqnpQhmjaOBU+1H2sy8Ijj1rYU5tt
        ePLpEqxZk031j3THdaImBhfE/lJdjqOqby+FiOW2V5f+N0bdfl3aA4uKSpQhgPhV3K57/z7eewD7lm3a
        tGtVQ4CcnBymKNHkmX/YvELtfkRf4THW1UV/EJZCQs0PTbuNQGD+X/x+YW4F8pjoEwx6WHgD/gIKGmYM
        /9zWZAAAAABJRU5ErkJggg==
</value>
  </data>
</root>